{"version":3,"sources":["Components/StepperVertical.tsx","Components/Sidebar.tsx","Components/Pins.tsx","Components/Map.tsx","Components/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","width","button","marginTop","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","VerticalLinearStepper","classes","React","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","className","Stepper","orientation","map","label","index","Step","key","StepLabel","StepContent","Typography","step","getStepContent","Button","disabled","onClick","variant","color","length","Paper","square","elevation","Sidebar","drawerOpen","toggleFilter","SearchContext","Consumer","searchFilters","Drawer","anchor","open","style","paddingTop","minWidth","maxWidth","fontWeight","fontSize","textAlign","Divider","margin","FormGroup","paddingLeft","paddingRight","paddingBottom","Object","keys","filter","idx","FormControlLabel","control","Switch","size","checked","onChange","labelMap","labelPlacement","Pins","this","props","data","onHover","place","longitude","lng","latitude","lat","onMouseOver","viewBox","PureComponent","Map","onClickPin","lockMap","bounds","mapboxgl","LngLatBounds","PLACES","forEach","p","extend","LngLat","zoom","viewport","setViewport","layers","filteredPins","initialViewState","height","controller","getCursor","onViewStateChange","glOptions","onError","console","error","zIndex","mapStyle","mapboxApiAccessToken","display","top","left","position","positionOptions","enableHighAccuracy","trackUserLocation","Header","toggleDrawer","AppBar","Toolbar","fontFamily","IconButton","marginLeft","createMuiTheme","palette","primary","main","light","dark","contrastText","secondary","defaultFilters","createContext","App","state","filters","currentPlace","location","items","details","push","ThemeProvider","Provider","value","Grid","container","direction","item","xs","setState","filterKey","Modal","overflow","outline","onClose","disableAutoFocus","Card","CardHeader","title","subheader","trim","action","aria-label","CardContent","gutterBottom","List","dense","ListItem","ListItemAvatar","Avatar","icon","substr","ListItemText","wordWrap","textOverflow","Link","href","content","CardActions","paragraph","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9dfde611.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  }),\n);\n\nfunction getSteps() {\n  return ['Get the facts', 'Make an appointment', 'Find your way'];\n}\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return `If you're feeling well or only have mild symptoms, it's best to \n              touch base with your local health department before seeing a doctor.\n              That's because people who live in areas with limited COVID-19 testing \n              capacity will require approval from public health officials before \n              they are tested.`;\n    case 1:\n      return `If you have fever, chills, cough, headache or another flu-like symptom\n              do NOT walk into a clinic or hospital. You may be turned away\n              and asked to make an appointment. Many providers around the country\n              offer telemedicine visits for COVID-19 evaluations at no charge. \n              Some providers even allow patients to book appointments online. Click \n              around the map to find the healthcare provider that meets your needs.\n              `;\n    case 2:\n      return `If you are eligible for testing based on public health guidelines, you'll \n              be given directions to the nearest COVID-19 specimen collection area. \n              This may be an isolated area within the same healthcare facility, \n              a nearby clinical lab, or even a specially-designated area at a your local \n              DMV office. The key thing to remember is to follow directions and to allow\n              yourself plenty of time to get there - especially if your are given an \n              appointment for this part of the process.`;\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport const VerticalLinearStepper = () => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((label, index) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n            <StepContent>\n              <Typography>{getStepContent(index)}</Typography>\n              <div className={classes.actionsContainer}>\n                <div>\n                  <Button\n                    disabled={activeStep === 0}\n                    onClick={handleBack}\n                    className={classes.button}\n                  >\n                    Back\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                  </Button>\n                </div>\n              </div>\n            </StepContent>\n          </Step>\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n          <Typography>Depending on the number of pending tests in your area, \n            it may take up to a few days to get results. Make sure to \n            STRICTLY adhere to the self-isolation guidelines set forth by \n            your doctor and/or public health department. Unless you are explicitly\n            told otherwise, you MUST complete your self-isolation period - even if\n            your test result is negative for COVID-19. \n            </Typography>\n          <Button onClick={handleReset} className={classes.button}>\n            Reset\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport {\n    Drawer, Box, Typography, Tabs, Tab, AppBar,\n    FormGroup, FormControlLabel, Switch, Divider\n} from '@material-ui/core';\nimport { VerticalLinearStepper } from './StepperVertical';\nimport { SearchContext, SearchFilters, labelMap } from '../App';\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n    const { children, value, index } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`tabpanel-${index}`}\n            aria-labelledby={`tab-${index}`}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\ntype SidebarProps = {\n    drawerOpen: boolean;\n    toggleFilter: Function\n}\n\nexport const Sidebar = ({ drawerOpen, toggleFilter }: SidebarProps) => {\n    const [tabIdx, setTab] = useState(0);\n\n    return <SearchContext.Consumer>\n        {\n            ( searchFilters ) => {\n                return <Drawer\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={drawerOpen}\n                >\n                    <div style={{ paddingTop: '32px', minWidth: '25%', maxWidth: '450px' }}>\n                        {/* <AppBar position=\"static\">\n                            <Tabs value={tabIdx} onChange={(e, v) => setTab(v)}>\n                                <Tab label=\"Filters\" />\n                                {0 ? <Tab label=\"Place\" /> : ''}\n                            </Tabs>\n                        </AppBar> */}\n\n                        {/* <TabPanel value={tabIdx} index={0}> */}\n                            <Typography style={{padding: '12%', fontWeight: 'bold', fontSize: '1.3rem', color: '#E45B26', textAlign: 'center'}}>\n                                If this is a medical emergency, stop and dial 911. \n                            </Typography>\n                            {/* <Typography style={{padding: '15%', fontWeight: 'bold', fontSize: '1.8rem', color: '#E45B26', alignContent: 'center'}}>\n                                If you are experiencing fever, chills, cough, headache or another flu-like symptom CALL BEFORE you head to any healthcare facility.\n                            </Typography> */}\n                            \n                            <Divider style={{margin: 10}} />\n                            \n                            <FormGroup style={{paddingLeft: '15%', paddingRight: '10%',  paddingTop: '16px', paddingBottom: '16px',}}>\n\n                                {Object.keys(searchFilters).map((filter : string, idx: number) => {\n                                    return (<FormControlLabel\n                                        key={`toggle-${idx}`}\n                                        control={<Switch size=\"small\" checked={searchFilters[filter as keyof SearchFilters]}\n                                        onChange={() => toggleFilter(filter)} />}\n                                        label={labelMap[filter]}\n                                        labelPlacement=\"start\"\n                                    />);\n                                })}\n\n                            </FormGroup>\n\n                            <Divider style={{margin: 10}} />\n                            \n                            <VerticalLinearStepper />\n\n                        {/* </TabPanel> */}\n\n                        {/* {0 ? <TabPanel value={tabIdx} index={1}>\n\n                        </TabPanel> : ''} */}\n                    </div>\n                </Drawer>\n            }\n        }\n    </SearchContext.Consumer>;\n}","import React, { PureComponent } from 'react';\nimport { Marker } from 'react-map-gl';\n\nimport LocalHospital from '@material-ui/icons/LocalHospital';\n\nexport interface PinsProps {\n    data: any;\n    onClick: Function,\n    onHover: Function\n};\n\n// Important for perf: the markers never change, avoid rerender when the map viewport changes\nexport default class Pins extends PureComponent<PinsProps> {\n    render() {\n        const { data, onClick, onHover } = this.props;\n\n        // TODO: Make a real type for the place data\n        return data.map((place: any, index: number) => {\n            return (\n                <Marker key={`marker-${index}`} longitude={place.lng} latitude={place.lat}>\n                    <span\n                        onClick={() => onClick(place)}\n                        onMouseOver={() => onHover(place)}\n                    >\n                        <LocalHospital viewBox=\"0 0 24 24\" style={{ fontSize: '11px' }} />\n                    </span>\n                </Marker>\n            )\n        });\n    }\n}","\nimport React, { useState } from 'react';\n\nimport { DeckGL } from \"@deck.gl/react\";\nimport mapboxgl from 'mapbox-gl';\n\nimport { StaticMap, GeolocateControl } from 'react-map-gl';\nimport PLACES from '../data/data.json';\nimport Pins from './Pins';\nimport { SearchContext } from '../App';\n\n// COVID19 Mapbox public key\nconst token = 'pk.eyJ1IjoibWFydGluYW1wcyIsImEiOiJjazd3aDNoaTQwMjNuM2ZtZTRrcm1wOHlqIn0.1c2tf5eJPHyAvC1GgO4zzg';\n\ntype MapProps = {\n    onClickPin: Function;\n    lockMap: boolean;\n}\n\nexport const Map = ({ onClickPin, lockMap }: MapProps ) => {\n    const bounds = new mapboxgl.LngLatBounds();\n    PLACES.forEach(p => {\n        bounds.extend(new mapboxgl.LngLat(p.lng, p.lat));\n    });\n\n    const boundedViewport = {\n        longitude: -98,\n        latitude: 38.5,\n        zoom: 5,\n    }\n    \n    /*{\n        ...new WebMercatorViewport({\n            width: window.innerWidth,\n            height: window.innerHeight\n        }).fitBounds([bounds.getNorthEast().toArray(), bounds.getSouthWest().toArray()], {\n            padding: 7,\n            offset: [40, 20]\n        }), pitchMaybe: 15, bearingMaybe: 108\n    };*/\n\n    const [viewport, setViewport] = useState(boundedViewport);\n    const layers: any = [];\n\n    return <SearchContext.Consumer>\n        {\n            (searchFilters) => {\n                const filteredPins = PLACES.filter(place => {\n                    Object.keys(searchFilters).forEach(key => {\n\n                    });\n\n                    if (searchFilters['is-verified'] && place['is-verified'] !== 'TRUE') {\n                        return false;\n                    }\n\n                    if (searchFilters['is-location-collecting-specimens'] && place['is-location-collecting-specimens'] !== 'TRUE') {\n                        return false;\n                    }\n\n                    if (searchFilters['is-location-by-appointment-only'] && place['is-location-by-appointment-only'] !== 'TRUE') {\n                        return false;\n                    }\n\n                    if (searchFilters['is-location-only-testing-patients-that-meet-criteria'] && place['is-location-only-testing-patients-that-meet-criteria'] !== 'TRUE') {\n                        return false;\n                    }\n      \n                    return true;\n                });\n\n                return <DeckGL\n                    initialViewState={viewport}\n                    width=\"100vw\"\n                    height=\"100vh\"\n                    layers={layers}\n                    controller={!lockMap}\n                    getCursor={() => { return 'cursor'; }}\n                    onViewStateChange={(viewport: any) => setViewport({ ...viewport })}\n                    // @ts-ignore\n                    glOptions={{onError: console.error}}\n                >\n                    <StaticMap\n                        width=\"100vw\"\n                        height=\"100vh\"\n                        style={{ zIndex: 50 }}\n                        mapStyle='mapbox://styles/mapbox/streets-v11'\n                        mapboxApiAccessToken={token}\n                    >\n                        <div style={{display: 'none', top: 62, left: 15, position: 'absolute', zIndex: 1}}>\n                            <GeolocateControl\n                                positionOptions={{enableHighAccuracy: true}}\n                                trackUserLocation={true}\n                            />\n                        </div>\n                        <Pins data={filteredPins} onClick={onClickPin} onHover={() => {}} />;\n                    </StaticMap>\n                </DeckGL>\n            }\n        }\n    </SearchContext.Consumer>;\n};\n","import React from 'react';\nimport { Toolbar, IconButton, AppBar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\ntype HeaderProps = {\n    toggleDrawer: Function\n};\n\nexport const Header = ({ toggleDrawer }: HeaderProps) => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\" style={{padding: '0 7', fontFamily: 'Roboto,Helvetica,Arial,sans-serif', fontWeight: \"bold\"}}>\n                {1 ?\n                <IconButton onClick={() => toggleDrawer()}>\n                    <MenuIcon style={{color: 'white', marginLeft: '-20'}} />\n                </IconButton> : ''}\n\n                <Typography variant=\"h5\">\n                    COVID-19 Evaluation and Testing\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Sidebar } from './Components/Sidebar';\nimport { Map } from './Components/Map';\nimport { Header } from './Components/Header';\nimport { Card, CardContent, Typography, CardActions, Button, Modal, CardHeader, Link, List, ListItem, ListItemAvatar, Avatar, ListItemText, IconButton, Divider } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport InfoIcon from '@material-ui/icons/Info';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport CloseIcon from '@material-ui/icons/Close';\n\n// Building a custom theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#4a138c',\n      light: '#7c42bd',\n      dark: '#12005e',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#ace520',\n      light: '#e2ff5e',\n      dark: '#77b300',\n      contrastText: '#4a148c'\n    },\n  },\n});\n\nexport const\n labelMap: any = {\n  'is-verified': 'Exclude local public health agencies',\n  'is-location-screening-patients': 'Checks patients for symptoms',\n  'is-location-collecting-specimens': 'Offers COVID-19 testing',\n  'is-location-accepting-third-party-orders-for-testing': 'Accepting 3rd party testing',\n  'is-location-only-testing-patients-that-meet-criteria': 'Patients must meet testing criteria',\n  'is-location-by-appointment-only': 'Requires appointment'\n};\n\nexport interface SearchFilters {\n  'is-verified': boolean;\n  'is-location-screening-patients': boolean;\n  'is-location-collecting-specimens': boolean;\n  'is-location-accepting-third-party-orders-for-testing': boolean;\n  'is-location-only-testing-patients-that-meet-criteria': boolean;\n  'is-location-by-appointment-only': boolean;\n}\n\n// Initial state\nconst defaultFilters: SearchFilters = {\n  'is-verified': true,\n  'is-location-screening-patients': true,\n  'is-location-collecting-specimens': false,\n  'is-location-accepting-third-party-orders-for-testing': false,\n  'is-location-only-testing-patients-that-meet-criteria': false,\n  'is-location-by-appointment-only': false\n};\n\ninterface AppState {\n  filters: SearchFilters;\n  drawerOpen: boolean;\n  currentPlace: any;\n}\n\nexport const SearchContext = React.createContext<SearchFilters>(defaultFilters);\n\nexport class App extends React.Component<{}, AppState> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      filters: defaultFilters,\n      currentPlace: null,\n      drawerOpen: false\n    };\n  }\n\n  render() {\n    const location = this.state.currentPlace;\n\n    let items: any = [\n      {\n        'title': 'Type',\n        'key': 'location-place-of-service-type',\n        'icon': <InfoIcon />\n      },\n      {\n        'title': 'Website',\n        'key': 'location-contact-url-main',\n        'icon': <LanguageIcon />\n      },\n      {\n        'title': 'Testing Criteria',\n        'key': 'location-specific-testing-criteria',\n        'icon': <LanguageIcon />\n      }\n    ];\n\n    let details: any = [];\n    Object.keys(labelMap).forEach(key => {\n      details.push({\n        'type': 'boolean',\n        'title': labelMap[key],\n        'key': key,\n        'icon': <InfoIcon />\n      });\n    });\n\n\n    return (\n      <ThemeProvider theme={theme}>\n        <SearchContext.Provider value={this.state.filters}>\n          \n          <Grid className=\"container\" container direction=\"row\">\n            <Grid container item xs={12} style={{ zIndex: 30, height: 40 }}>\n              <Header toggleDrawer={() => this.setState({ drawerOpen: !this.state.drawerOpen })} />\n            </Grid>\n          </Grid>\n\n          <Grid container direction=\"column\">\n            <Grid container item xs={4} style={{ zIndex: 20 }}>\n              <Sidebar drawerOpen={this.state.drawerOpen} toggleFilter={(filterKey: keyof SearchFilters) => {\n                this.setState({\n                  filters: { ...this.state.filters, [filterKey]: !this.state.filters[filterKey] }\n                });\n              } } />\n            </Grid>\n\n            <Grid onClick={() => {\n              if (this.state.drawerOpen) {\n                this.setState({ drawerOpen: false });\n              }\n            }} container item xs={12}>\n              <Map lockMap={false} onClickPin={(place: any) => {\n                this.setState({ currentPlace: place });\n              }} />\n\n              {location === null ? '' : (\n                <Modal\n                  style={{ width: '90%', height: '95%', overflow: 'auto', maxWidth: 600, padding: 10, margin: '0 auto', outline: 0 }}\n                  onClose={() => this.setState({ currentPlace: null })}\n                  disableAutoFocus={true} open\n                >\n                  <Card style={{ outline: 0 }}>\n                    <CardHeader\n                      title={location['location-name']}\n                      subheader={\n                        location['location-address-street'].trim() + ', '\n                        + location['location-address-locality'].trim()\n                        + ', ' + location['location-address-region'].trim()\n                        + ' ' + location['location-address-postal-code'].trim()\n                      }\n                      action={\n                        <IconButton aria-label=\"close\"\n                          onClick={() => this.setState({ currentPlace: null })}>\n                          <CloseIcon />\n                        </IconButton>\n                      }\n                    />\n\n                    <CardContent>\n                      <Typography color=\"textPrimary\" gutterBottom>\n                        {location['additional-information-for-patients']}\n                      </Typography>\n\n                      <List dense={true} style={{ paddingBottom: 0, marginBottom: 0, fontSize: 12 }}>\n                        {items.map((item: any, idx: number) => {\n                          if (location[item.key].length === 0) {\n                            return '';\n                          }\n\n                          return (\n                            <ListItem key={idx}>\n                              <ListItemAvatar>\n                                <Avatar>\n                                  {item.icon}\n                                </Avatar>\n                              </ListItemAvatar>\n                              {location[item.key].substr(0, 4) === 'http'\n                                ? <ListItemText style={{wordWrap: 'break-word', textOverflow: 'ellipsis'}} \n                                  primary={<Link href={location[item.key]}>{location[item.key]}</Link>} />\n                                : <ListItemText primary={item.title} secondary={location[item.key]} />}\n                            </ListItem>\n                          )\n                        })}\n                      </List>\n\n                      <Divider style={{margin: 10}} />\n\n                      <Typography variant=\"h6\">Details about this location</Typography>\n                      <List>\n                      {details.map((item: any, idx: number) => {\n                          const content = location[item.key] === 'TRUE' ? '✅' : '🔴';\n                          return (\n                            <ListItem key={idx}>\n                              <ListItemText primary={content + ' ' + item.title} />\n                            </ListItem>\n                          )\n                        })}\n                      </List>\n\n                    </CardContent>\n\n                    {location['location-contact-phone-main'] === '' ? '' : (\n                      <CardActions>\n                        <Button size=\"small\">\n                          <Link href={'tel://' + location['location-contact-phone-main']}>\n                            Call Main Line ({location['location-contact-phone-main']})\n                          </Link>\n                        </Button>\n                      </CardActions>\n                    )}\n\n                    {location['location-contact-phone-appointments'] === '' ? '' : (\n                      <CardActions>\n                        <Button size=\"small\" >\n                          <Link href={'tel://' + location['location-contact-phone-appointments']}>\n                            Call Appointments Line ({location['location-contact-phone-appointments']})\n                          </Link>\n                        </Button>\n                      </CardActions>\n                    )}\n\n                    <Divider style={{margin: 10}} />\n\n                    <Typography paragraph={true} style={{padding: 10}}>\n                    At this point in time, appointments for COVID-19 screening and testing are required at virtually every location - make sure to call or book ahead\n                    </Typography>\n\n                    <CardActions>\n                      <Button size=\"small\">\n                        <Link href=\"https://docs.google.com/forms/d/e/1FAIpQLSfYpEDiV8MwkBSVa7rKI_OzrmtGvclzgFzvcjxocLJncJOXDQ/viewform?usp=sf_link\">\n                          Report An Error\n                        </Link>\n                      </Button>\n\n                      <Button size=\"small\">\n                        <Link href=\"https://docs.google.com/forms/d/e/1FAIpQLScK-lqYZAr6MdeN1aafCrcXKR0cc96Ym-mzwz-4h3OgTpAvyQ/viewform?usp=sf_link\">\n                          Suggest An Edit\n                        </Link>\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Modal>\n              )}\n            </Grid>\n          </Grid>\n        </SearchContext.Provider>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}